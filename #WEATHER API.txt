#WEATHER API (OWN API)
App.js
import React, { useState } from "react";
import axios from "axios";

function App() {
  const [city, setCity] = useState("");
  const [weather, setWeather] = useState(null);
  const [error, setError] = useState(null);

  const getWeather = async () => {
    if (!city) return alert("Enter city name!");

    try {
      const response = await axios.get(`http://localhost:5000/weather/${city}`);
      setWeather(response.data);
      setError(null);
    } catch (err) {
      setError("City not found!");
      setWeather(null);
    }
  };

  return (
    <div style={{ textAlign: "center", marginTop: "50px" }}>
      <h2>🌤️ My Weather App</h2>
      <input
        type="text"
        value={city}
        placeholder="Enter city"
        onChange={(e) => setCity(e.target.value)}
        style={{ padding: "8px", width: "200px" }}
      />
      <button onClick={getWeather} style={{ marginLeft: "10px", padding: "8px" }}>
        Get Weather
      </button>

      {error && <p style={{ color: "red" }}>{error}</p>}

      {weather && (
        <div style={{ marginTop: "20px" }}>
          <h3>{weather.city}</h3>
          <p>🌡️ Temperature: {weather.temp}°C</p>
          <p>☁️ Condition: {weather.condition}</p>
          <p>💨 Wind: {weather.wind} m/s</p>
        </div>
      )}
    </div>
  );
}

export default App;



server.js
const express = require("express");
const cors = require("cors");
const app = express();
const PORT = 5000;

app.use(cors());
app.use(express.json());

// Sample weather data
const weatherData = {
  Madurai: { temp: 32, condition: "Sunny", wind: 3.5 },
  Chennai: { temp: 30, condition: "Cloudy", wind: 2.8 },
  Delhi: { temp: 28, condition: "Rainy", wind: 4.2 },
};

// API endpoint
app.get("/weather/:city", (req, res) => {
  const city = req.params.city;
  const data = weatherData[city];

  if (data) {
    res.json({ city, ...data });
  } else {
    res.status(404).json({ error: "City not found!" });
  }
});

app.listen(PORT, () => {
  console.log(`Weather API running at http://localhost:${PORT}`);
});

how to run:
one terminal:
cd weather-api
npm install express cors axios
node server.js

another terminal
npm start

#THIRD PARTY API
import React, { useEffect, useState } from "react";

function App() {
  const [rates, setRates] = useState({});
  const [amount, setAmount] = useState(1);
  const [from, setFrom] = useState("USD");
  const [to, setTo] = useState("INR");
  const [result, setResult] = useState(null);

  // Fetch currency rates when app loads
  useEffect(() => {
    fetch("https://api.exchangerate-api.com/v4/latest/USD")
      .then(res => res.json())
      .then(data => setRates(data.rates))
      .catch(err => console.error("Error fetching rates:", err));
  }, []);

  const convert = () => {
    if (!rates[to] || !rates[from]) return;
    const converted = (amount / rates[from]) * rates[to];
    setResult(converted.toFixed(2));
  };

  return (
    <div style={{ textAlign: "center", marginTop: "50px" }}>
      <h2>Currency Converter</h2>

      <div style={{ marginBottom: "20px" }}>
        <input
          type="number"
          value={amount}
          onChange={e => setAmount(e.target.value)}
          style={{ padding: "5px", width: "100px" }}
        />

        <select value={from} onChange={e => setFrom(e.target.value)}>
          {Object.keys(rates).map((code) => (
            <option key={code}>{code}</option>
          ))}
        </select>

        <span style={{ margin: "0 10px" }}>to</span>

        <select value={to} onChange={e => setTo(e.target.value)}>
          {Object.keys(rates).map((code) => (
            <option key={code}>{code}</option>
          ))}
        </select>

        <button onClick={convert} style={{ marginLeft: "10px", padding: "5px" }}>
          Convert
        </button>
      </div>

      {result && (
        <h3>
          {amount} {from} = {result} {to}
        </h3>
      )}
    </div>
  );
}

export default App;

#REST API
// server.js
const express = require("express");
const app = express();
app.use(express.json()); // to read JSON body

let students = [
  { id: 1, name: "Harinishree" },
  { id: 2, name: "Dhoni" }
];

// GET - fetch all students
app.get("/students", (req, res) => {
  res.json(students);
});

// POST - add a new student
app.post("/students", (req, res) => {
  const newStudent = { id: Date.now(), name: req.body.name };
  students.push(newStudent);
  res.json(newStudent);
});

// PUT - update a student's name
app.put("/students/:id", (req, res) => {
  const id = parseInt(req.params.id);
  const student = students.find(s => s.id === id);
  if (student) {
    student.name = req.body.name;
    res.json(student);
  } else {
    res.status(404).send("Student not found");
  }
});

// DELETE - remove a student
app.delete("/students/:id", (req, res) => {
  const id = parseInt(req.params.id);
  students = students.filter(s => s.id !== id);
  res.send("Deleted successfully");
});

// Start server
app.listen(5000, () => console.log("Server running on port 5000"));
